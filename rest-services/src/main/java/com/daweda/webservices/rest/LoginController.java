package com.daweda.webservices.rest;

import com.daweda.services.UserService;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.http.HttpStatus;
//import org.springframework.http.ResponseEntity;
//import org.springframework.web.bind.annotation.*;

//import javax.mail.MessagingException;
//import javax.persistence.NoResultException;
//import javax.servlet.http.HttpServletRequest;
//import javax.servlet.http.HttpServletResponse;

//@RestController
//@RequestMapping
public class LoginController {
//	@Autowired
    UserService userService;
	
//	@RequestMapping(value="/loadUsersData", method = RequestMethod.POST, headers="Accept=application/json")
//	public @ResponseBody
//    User loadUsersData(@RequestBody String token, HttpServletRequest request, HttpServletResponse response){
//
//		response.setHeader("Access-Control-Allow-Origin", "*");
//		response.setHeader("Access-Control-Allow-Methods", "POST, GET, OPTIONS, DELETE");
//		response.setHeader("Access-Control-Max-Age", "3600");
//		response.setHeader("Access-Control-Allow-Headers", "x-requested-with");
//
//		System.out.println("registration");
//		User user = null;
//		try{
//			user = userService.findUserByToken(token);
//		} catch (NoResultException e){
//			return null;
//		}
//		//System.out.println("USER-------- " + user.getEmail());
//		//UserInfo ui = null;
//		if(user != null){
//			return user;
//			//ui = new UserInfo(user.getId(), user.getEmail(), user.getIsActivated(), user.getToken());
//			//System.out.println("USER--------1 " + ui.getEmail());
//		}
//		return null;
//	}
//
//	@RequestMapping(value="/login", method = RequestMethod.POST,headers="Accept=application/json")
//	public @ResponseBody User loginUser(@RequestBody UserAccount userAccount, HttpServletRequest request,
//	        HttpServletResponse response) throws MyRestException{
//
//		System.out.println("login");
//
//		if(userAccount == null || userAccount.getUsername() == null || userAccount.getUsername().isEmpty() ||
//				userAccount.getPassword() == null  || userAccount.getPassword().isEmpty()){
//			throw new MyRestException(HttpStatus.UNAUTHORIZED, "Your username or password is invalid! Please try again!");
//		}
//
//		System.out.println("userpwd: " + userAccount.getPassword());
//
//		User user = new User();
//		if((user = userService.findUserByEmail(userAccount.getUsername())) != null) {
//			System.out.println("found user by email");
//			String password = userAccount.getPassword();
//
//			//UserInfo ui = new UserInfo(user.getId(), user.getEmail(), user.getIsActivated(), user.getToken());
//
//			if(!password.equals(user.getPassword())){
//				//if it is change password on 2nd login
//				System.out.println("isUserPassword: " + user.getIsUserPassword());
//				System.out.println("isChangePwdAllowed: " + user.getIsChangePwdAllowed());
//				if(user.getIsUserPassword() == false && user.getIsChangePwdAllowed() == true) {
//					//update password
//					System.out.println("updating password");
//					String token = user.getToken();
//					userService.updateIsUserPassword(token, true);
//					userService.updatePassword(token, userAccount.getPassword());
//					try {
//						EmailUtils.sendNewPassword(userAccount.getUsername(), userAccount.getPassword());
//					} catch (MessagingException e) {
//						throw new MyRestException(HttpStatus.INTERNAL_SERVER_ERROR,
//								"Failed to send email!");
//					}
//
//					response.setHeader("MutopiaToken", user.getToken());
//					return user;
//				}
//				else
//					throw new MyRestException(HttpStatus.UNAUTHORIZED, "Your username or password is invalid! Please try again!");
//			}
//			else{
//				System.out.println("pwd equals");
//				boolean isUserPassword = user.getIsUserPassword();
//				if(isUserPassword == false && user.getIsChangePwdAllowed() == false){
//					userService.updateIsChangePwdAllowed(user.getToken(), true);
//					System.out.println("pwd change is allowed");
//				}
//				if(isUserPassword){
//					System.out.println("user password");
//					response.setHeader("MutopiaToken", user.getToken());
//					return user;
//				}
//				else {
//					System.out.println("auto password");
//					throw new MyRestException(HttpStatus.UPGRADE_REQUIRED, "Your previous password was generated by the system. Please create your own password now ang login with it!");
//				}
//			}
//		}
//		else {
//			System.out.println("unauthorized");
//			throw new MyRestException(HttpStatus.UNAUTHORIZED, "Your username or password is invalid! Please try again!");
//		}
//	}
//
//	@RequestMapping(value="/passwordforgetten", method = RequestMethod.POST,headers="Accept=application/json")
//	public @ResponseBody String forgotPassword(@RequestBody String username, HttpServletRequest request, HttpServletResponse response) throws MyRestException {
//		System.out.println("forget password");
//
//		if(username == null){
//			throw new MyRestException(HttpStatus.EXPECTATION_FAILED, "Wrong username");
//		}
//
//		User user = userService.findUserByEmail(username);
//		if(user == null)
//			throw new MyRestException(HttpStatus.EXPECTATION_FAILED, "Wrong username");
//		String linkToFollow = "http://" + request.getLocalAddr() + ":" + request.getLocalPort() + request.getContextPath() + "/homepage.html?resettoken=" + user.getToken();
//		try {
//			EmailUtils.sendEmailForgotPasswordMessage(username, linkToFollow);
//		} catch (MessagingException e) {
//			throw new MyRestException(HttpStatus.INTERNAL_SERVER_ERROR, "Failed to send email!");
//		}
//
//		return username;
//	}
//
//	//responds to reset password event
//	@RequestMapping(value="/passwordforgetten/reset", method = RequestMethod.POST,headers="Accept=application/json")
//	public @ResponseBody String approveResetPassword(@RequestBody UserAccount userAccount, HttpServletRequest request, HttpServletResponse response) throws MyRestException {
//		System.out.println("reset password approval");
//
//		if(userAccount == null){
//			throw new MyRestException(HttpStatus.EXPECTATION_FAILED, "No username!");
//		}
//
//		User user = userService.findUserByEmail(userAccount.getUsername());
//		if(user == null)
//			throw new MyRestException(HttpStatus.EXPECTATION_FAILED, "Wrong token");
//		userService.updatePassword(user.getToken(), userAccount.getPassword());
//		try {
//			EmailUtils.sendNewPassword(user.getEmail(), userAccount.getPassword());
//		} catch (MessagingException e) {
//			throw new MyRestException(HttpStatus.INTERNAL_SERVER_ERROR,
//					"Failed to send email!");
//		}
//		return user.getToken();
//	}
//
//	//responds to password forgotten event
//	@RequestMapping(value="/passwordforgetten/checkEmailToken", method = RequestMethod.POST,headers="Accept=application/json")
//	public @ResponseBody User checkEmailToken(@RequestBody String token, HttpServletRequest request, HttpServletResponse response) throws MyRestException {
//
//		System.out.println("Check email token - " + token);
//
//		User user = null;
//		if(token == null)
//			throw new MyRestException(HttpStatus.EXPECTATION_FAILED, "Wrong token");
//		if((user = userService.findUserByToken(token)) == null)
//			throw new MyRestException(HttpStatus.EXPECTATION_FAILED, "Wrong token");
//		else{
////			UserAccount userAccount = new UserAccount();
////			userAccount.setUsername(user.getEmail());
////			userAccount.setPassword(user.getPassword());
//			//UserInfo ui = new UserInfo(user.getId(), user.getEmail(), user.getIsActivated(), user.getToken());
//
//			response.setHeader("MutopiaToken", user.getToken());
//			return user;
//		}
//	}
//
//	@RequestMapping(value="/logout", method = RequestMethod.POST,headers="Accept=application/json")
//	public @ResponseBody boolean logout(@RequestBody String token, HttpServletRequest request, HttpServletResponse response) throws MyRestException {
//		return true;
//	}
//
//	@ExceptionHandler
//    public ResponseEntity<ErrorResource> handle(MyRestException e) {
//        System.out.println("MyRestException!!!");
//        return new ResponseEntity<ErrorResource>(new ErrorResource(e.getStatus(), e.getMessage()), e.getStatus());
//    }
}
